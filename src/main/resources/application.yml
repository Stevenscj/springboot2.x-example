server:
  port: 8080

spring:
  application:
    name: spring-demo

  # DB 配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5
      max-active: 50
      min-idle: 10
      max-wait: 1000
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 2
      test-on-borrow: true
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      filters: stat,wall,slf4j
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 主库数据源
      master:
        url: jdbc:mysql://localhost:3306/user?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: root

  # Elasticsearch 配置
  data:
    elasticsearch:
      cluster-name: elasticsearch
      cluster-nodes: localhost:9300


# MyBatis 配置
mybatis:
  #sql打印配置
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# JetCache 配置
jetcache:
  statIntervalMinutes: 15
  areaInCacheName: false
  hiddenPackages: com.mgtv
  local:
    default:
      type: caffeine
      limit: 100
      keyConvertor: fastjson
      expireAfterWriteInMillis: 60000
  remote:
    default:
      type: redis.lettuce
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 200
        maxTotal: 1000
      uri:
        - redis://localhost:6379
        - redis://localhost:6380
        - redis://localhost:6381

# RocketMQ配置
rocketmq:
  name-server: localhost:9876
  producer:
    # RocketMQ的最佳实践中推荐：一个应用尽可能用一个Topic，消息子类型用tags来标识
    group: my-group
